@model Events.web.ViewModels.IdeaFileViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Create.css" rel="stylesheet" type="text/css" />
<h2>Create</h2>

@using (Html.BeginForm("Create", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



    <h4>Idea</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p>Submission: @ViewBag.SubmissionId</p>

    <div class="write-post">
        <div class="foom">
            <div class="title">
                @Html.LabelFor(model => model.Idea.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Idea.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Idea.Title, "", new { @class = "text-danger" })
            </div>

            <div class="content">
                @Html.LabelFor(model => model.Idea.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Idea.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Idea.Description, "", new { @class = "text-danger" })
            </div>

            <div class="post-input">
                @Html.LabelFor(model => model.Idea.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Idea.Content, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ghi vo", @rows = 7 } })
                @Html.ValidationMessageFor(model => model.Idea.Content, "", new { @class = "text-danger" })
            </div>


            <div class="profile">
                <div class="center">
                    <div class="box">
                        <div name="sources"
                             id="sources"
                             class="custom-select"
                             placeholder="Categories">
                            @Html.LabelFor(model => model.Idea.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Idea.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="form-group">
                    <input type="hidden" value="@Model.Submissions.SubmissionId" />
                </div>*@
                    <div class="check">
                        <p>Term</p>
                        @Html.CheckBox("isAcceptTerm", true)
                        <p>Anonymously</p> @Html.CheckBoxFor(model => model.Idea.isAnon)
                    </div>
                </div>
            </div>
            <div class="choose-file">
                @Html.TextBoxFor(model => model.File, new { type = "file" })
            </div>
        </div>
        <div class="create">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = ViewBag.Submissions })
</div>

<script>
    $(".custom-select").each(function () {
        var classes = $(this).attr("class"),
            id = $(this).attr("id"),
            name = $(this).attr("name");
        var template = '<div class="' + classes + '">';
        template +=
            '<span class="custom-select-trigger">' +
            $(this).attr("placeholder") +
            "</span>";
        template += '<div class="custom-options">';
        $(this)
            .find("option")
            .each(function () {
                template +=
                    '<span class="custom-option ' +
                    $(this).attr("class") +
                    '" data-value="' +
                    $(this).attr("value") +
                    '">' +
                    $(this).html() +
                    "</span>";
            });
        template += "</div></div>";

        $(this).wrap('<div class="custom-select-wrapper"></div>');
        $(this).hide();
        $(this).after(template);
    });
    $(".custom-option:first-of-type").hover(
        function () {
            $(this).parents(".custom-options").addClass("option-hover");
        },
        function () {
            $(this).parents(".custom-options").removeClass("option-hover");
        }
    );
    $(".custom-select-trigger").on("click", function () {
        $("html").one("click", function () {
            $(".custom-select").removeClass("opened");
        });
        $(this).parents(".custom-select").toggleClass("opened");
        event.stopPropagation();
    });
    $(".custom-option").on("click", function () {
        $(this)
            .parents(".custom-select-wrapper")
            .find("select")
            .val($(this).data("value"));
        $(this)
            .parents(".custom-options")
            .find(".custom-option")
            .removeClass("selection");
        $(this).addClass("selection");
        $(this).parents(".custom-select").removeClass("opened");
        $(this)
            .parents(".custom-select")
            .find(".custom-select-trigger")
            .text($(this).text());
    });</script>


